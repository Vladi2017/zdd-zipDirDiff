zdd_help.txt updates:
1:11 AM Friday, September 3, 2021 {replaced test_path with test_dir.}
1:09 PM Wednesday, September 1, 2021
11:37 PM Sunday, August 29, 2021;
1:32 PM Thursday, November 08, 2018;

NAME
	zdd - ZipDirDiff.., compare zipFile.zip	archive against test_dir (sub)directory.
		
SYNOPSIS
  zdd [-m k -nb -g -v1 -v2] [--longoption ...] [zipFile.zip] test_dir
		
DESCRIPTION
	This app is useful especially when you write on the same project on different machines and sometimes you need somehow to synchronize your work. zdd compare one zipped folder against his current directory counterpart (test_dir). By default zdd prints founded differences in terms of dir_only files, zip_only files and altered files.
	Both zipFile.zip and test_dir must reside in the same directory. If there is no zipFile.zip parameter in the command line, test_dir is compared against test_dir.zip file. For .git subdirs please see note_2 below. If two files (in the zip archive and test_dir (sub)directory, including relative paths) have same size, computeCRC32 is done to establish similarity.
	To assist your synchronization process:
      - the most recently altered files are "*" marked.
      - the most recently altered text files are "*!" marked if the older file counterpart has additional lines which was deleted in the new file's version. (note_1)
	Switches (OPTIONS) are in nmap-style (e.g. "$zdd -nbm 2 test_dir" will not work). Please use  "$zdd -nb -m 2 test_dir" instead.

Notes:
note_1. Even though the new version has more lines than the older one.
note_2. .git treatment: .git subdirs scanning is triggered by -g switch but in this case --maxdepth has no effect for .git position in test_dir / zipFile directory hierarchy. All .git subdirs will be scanned. Furthermore, in order to prevent excessive cluttering, only .git/logs/ subdirs differences will be reported. This should be sufficient in order to evaluate similarities in git archives inside test_dir / zipFile. In this respect to see (mostly) .git subdirs status use "zdd -m 0 -nb -g zipFile.zip test_dir". Otherwise if -g switch is used (without -m 0 -nb) .git logs are interleaved between other "ordinary" files (obviously if there are differences which need to be emphasized).
note_3. Please be aware that for -nb switch files such as .docx, .pdf, executable scripts (those with -x mode flag enabled) are treated as binaries and excluded from the report.

OPTIONS
-m k, --maxdepth k
	Comparison depth into test_dir (sub)directory hierarchy, k>=0. If k=0 no test_dir subdirs are searched.
-nb, --nobinary
	Ignore binaries. Also please see note_3.
-g, --git
  Also scan .git/ subdirectories.
-v1, --verbose1
	Also prints the common_list of files.
-v2, --verbose2
	Also prints directory and zipFile files.

EXAMPLES
	$zdd -nb -m 2 test_dir		#assume there is test_dir.zip archive as well
	$zdd zipFile.zip test_dir

OSs:
  Linux, Cygwin / WXP - W10.

DEPENDENCIES
	Perl min. v5.14 with File::Find, Archive::Zip, List::Util modules.
	
AUTHORS
	Vladimir Manolescu, Bucharest, Romania, mvmanol@yahoo.com
